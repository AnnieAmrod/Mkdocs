{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"C\u00f3mo crear Mi Portfolio en Django Para consultar la documentaci\u00f3n visita Instalaci\u00f3n Django Paso por Paso . Comandos Con estos comandos conseguir\u00e1s crear tu primer proyecto en Django. python3 -m venv [venv-name] - Crear el entorno virtual. source [venv-name]/Scripts/activate - Activar el entorno virtual. pip install Django==3.2 - Instalar la versi\u00f3n de Django 3.2. pip freeze > requirements.txt - Creamos el fichero requirements y comprobamos que contiene las versiones concretas necesarias para reinstalar nuestro proyecto. django-admin startproject [project-name] - Creamos el primer proyecto Django. Project layout Este es un breve ejemplo de la estructura de carpetas que puedes tener nada m\u00e1s comenzar tu aplicaci\u00f3n. portFolioDjango/ __pycache__/ __init__.py # Archivo de configuraci\u00f3n de importaci\u00f3n. asgi.py # Archivo de configuraci\u00f3n utilizado para definir una aplicaci\u00f3n ASGI y sus entornos de ejecuci\u00f3n. settings.py # Archivo de configuraci\u00f3n y personalizaci\u00f3n de la aplicaci\u00f3n web y del entorno de ejecuci\u00f3n. urls.py # Archivo de configuraci\u00f3n que contiene una lista de patrones de URL y sus correspondientes vistas, utilizado para definir y gestionar las URL's de la aplicaci\u00f3n web y controlar el comportamiento de la aplicaci\u00f3n cuando se visitan esas URL's. wsgi.py # Archivo de configuraci\u00f3n utilizado para definir una aplicaci\u00f3n WSGI y sus entornos de ejecuci\u00f3n. templates/ portfolio/ # Directorio de la app portfolio base.html # Fichero html que servir\u00e1 de base al resto. categorias_dropdown.html contacto.html footer.html # Fichero html de footer header.html # Fichero html de header home.html # Fichero html de homepage proyecto.html year.html 400.html # Fichero html de error com\u00fan 403.html # Fichero html de error com\u00fan 404.html # Fichero html de error com\u00fan 500.html # Fichero html de error com\u00fan db.sqlite3 # Archivo de bd manage.py # Archivo ejecutable utilizado para ejecutar tareas de administraci\u00f3n y mantenimiento de la aplicaci\u00f3n. ... # Otras p\u00e1ginas, im\u00e1genes y archivos. Tareas con manage.py Estas son algunas de las tareas que puedes realizar con el fichero manage.py python3 manage.py runserver - Iniciar el servidor de desarrollo de Django. python3 manage.py migrate - Crear una base de datos nueva o actualizar la base de datos existente. python3 manage.py startapp [appname] - Crear una nueva aplicaci\u00f3n. python3 manage.py startproject [projectname] - Crear un nuevo proyecto. python3 manage.py test [appname] - Ejecutar pruebas con una aplicaci\u00f3n de pruebas. python3 manage.py test [modulname] - Ejecutar pruebas con un m\u00f3dulo de pruebas. python3 manage.py createsuperuser - Crear un superusuario de Django. python3 manage.py help - Ver una lista de todos los comandos disponibles. python3 manage.py runserver --port 8080 - Iniciar el servidor de desarrollo de Django en un puerto espec\u00edfico. python3 manage.py migrate --noinput - Crear una base de datos nueva evistando que se soliciten entradas adicionales al usuario. Qu\u00e9 se podr\u00e1 realizar con esta gu\u00eda Podr\u00e1s No podr\u00e1s Realizar tu propio portfolio Alimentar a tu mascota Realizar otros proyectos con Django Conseguir empleo Crear tu propia aplicaci\u00f3n en Django Y para finalizar, nuestra m\u00e1xima siempre es: No es un bug, es una caracter\u00edstica no documentada (Alan J. Perlis).","title":"Home"},{"location":"#como-crear-mi-portfolio-en-django","text":"Para consultar la documentaci\u00f3n visita Instalaci\u00f3n Django Paso por Paso .","title":"C\u00f3mo crear Mi Portfolio en Django"},{"location":"#comandos","text":"Con estos comandos conseguir\u00e1s crear tu primer proyecto en Django. python3 -m venv [venv-name] - Crear el entorno virtual. source [venv-name]/Scripts/activate - Activar el entorno virtual. pip install Django==3.2 - Instalar la versi\u00f3n de Django 3.2. pip freeze > requirements.txt - Creamos el fichero requirements y comprobamos que contiene las versiones concretas necesarias para reinstalar nuestro proyecto. django-admin startproject [project-name] - Creamos el primer proyecto Django.","title":"Comandos"},{"location":"#project-layout","text":"Este es un breve ejemplo de la estructura de carpetas que puedes tener nada m\u00e1s comenzar tu aplicaci\u00f3n. portFolioDjango/ __pycache__/ __init__.py # Archivo de configuraci\u00f3n de importaci\u00f3n. asgi.py # Archivo de configuraci\u00f3n utilizado para definir una aplicaci\u00f3n ASGI y sus entornos de ejecuci\u00f3n. settings.py # Archivo de configuraci\u00f3n y personalizaci\u00f3n de la aplicaci\u00f3n web y del entorno de ejecuci\u00f3n. urls.py # Archivo de configuraci\u00f3n que contiene una lista de patrones de URL y sus correspondientes vistas, utilizado para definir y gestionar las URL's de la aplicaci\u00f3n web y controlar el comportamiento de la aplicaci\u00f3n cuando se visitan esas URL's. wsgi.py # Archivo de configuraci\u00f3n utilizado para definir una aplicaci\u00f3n WSGI y sus entornos de ejecuci\u00f3n. templates/ portfolio/ # Directorio de la app portfolio base.html # Fichero html que servir\u00e1 de base al resto. categorias_dropdown.html contacto.html footer.html # Fichero html de footer header.html # Fichero html de header home.html # Fichero html de homepage proyecto.html year.html 400.html # Fichero html de error com\u00fan 403.html # Fichero html de error com\u00fan 404.html # Fichero html de error com\u00fan 500.html # Fichero html de error com\u00fan db.sqlite3 # Archivo de bd manage.py # Archivo ejecutable utilizado para ejecutar tareas de administraci\u00f3n y mantenimiento de la aplicaci\u00f3n. ... # Otras p\u00e1ginas, im\u00e1genes y archivos.","title":"Project layout"},{"location":"#tareas-con-managepy","text":"Estas son algunas de las tareas que puedes realizar con el fichero manage.py python3 manage.py runserver - Iniciar el servidor de desarrollo de Django. python3 manage.py migrate - Crear una base de datos nueva o actualizar la base de datos existente. python3 manage.py startapp [appname] - Crear una nueva aplicaci\u00f3n. python3 manage.py startproject [projectname] - Crear un nuevo proyecto. python3 manage.py test [appname] - Ejecutar pruebas con una aplicaci\u00f3n de pruebas. python3 manage.py test [modulname] - Ejecutar pruebas con un m\u00f3dulo de pruebas. python3 manage.py createsuperuser - Crear un superusuario de Django. python3 manage.py help - Ver una lista de todos los comandos disponibles. python3 manage.py runserver --port 8080 - Iniciar el servidor de desarrollo de Django en un puerto espec\u00edfico. python3 manage.py migrate --noinput - Crear una base de datos nueva evistando que se soliciten entradas adicionales al usuario.","title":"Tareas con manage.py"},{"location":"#que-se-podra-realizar-con-esta-guia","text":"Podr\u00e1s No podr\u00e1s Realizar tu propio portfolio Alimentar a tu mascota Realizar otros proyectos con Django Conseguir empleo Crear tu propia aplicaci\u00f3n en Django Y para finalizar, nuestra m\u00e1xima siempre es: No es un bug, es una caracter\u00edstica no documentada (Alan J. Perlis).","title":"Qu\u00e9 se podr\u00e1 realizar con esta gu\u00eda"}]}